# =====================================================
# CREACIÓN DE LA BASE DE DATOS: HOSPITAL SALUD Y VIDA
# =====================================================

import sqlite3

# ---------------------------
# Conexión a la base de datos
# ---------------------------
conn = sqlite3.connect("hospital_salud_y_vida.db")
cursor = conn.cursor()

# ------------------------
# Tabla: Usuarios
# ------------------------
cursor.execute("""
CREATE TABLE IF NOT EXISTS usuarios (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    email TEXT UNIQUE NOT NULL,
    password TEXT NOT NULL
)
""")

# ------------------------
# Tabla: Servicios
# ------------------------
cursor.execute("""
CREATE TABLE IF NOT EXISTS servicios (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    descripcion TEXT NOT NULL,
    icono TEXT NOT NULL
)
""")

# Insertar servicios si aún no existen
cursor.execute("SELECT COUNT(*) FROM servicios")
if cursor.fetchone()[0] == 0:
    servicios = [
        ('Urgencias 24/7', 'Atencion medica inmediata para emergencias en cualquier momento del dia. Nuestro equipo responde a situaciones criticas con rapidez.', 'fa-truck-medical'),
        ('Consultas generales y especializadas', 'Consultas medicas con especialistas y atencion general para chequeos, diagnosticos y seguimiento.', 'fa-user-doctor'),
        ('Laboratorio clinico', 'Analisis de sangre, orina, perfil lipidico, pruebas de embarazo y mas.', 'fa-vials'),
        ('Rayos X y ultrasonido', 'Radiografias, ultrasonidos, mamografias y estudios de imagen con tecnologia moderna.', 'fa-x-ray'),
        ('Cirugias', 'Procedimientos quirurgicos programados o de emergencia en quirofanos con altos estandares.', 'fa-scalpel-line'),
        ('Hospitalizacion', 'Areas comodas y seguras para recuperacion con atencion de enfermeria 24/7.', 'fa-bed-pulse'),
        ('Cardiologia', 'Prevencion, diagnostico y tratamiento de enfermedades cardiovasculares.', 'fa-heart-circle-plus'),
        ('Pediatria', 'Atencion medica a ninos y adolescentes, seguimiento, vacunacion y tratamientos.', 'fa-baby')
    ]
    cursor.executemany("INSERT INTO servicios (nombre, descripcion, icono) VALUES (?, ?, ?)", servicios)

# ------------------------
# Tabla: Mensajes de Contacto
# ------------------------
cursor.execute("""
CREATE TABLE IF NOT EXISTS mensajes_contacto (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    email TEXT NOT NULL,
    mensaje TEXT NOT NULL,
    fecha DATETIME DEFAULT CURRENT_TIMESTAMP
)
""")

# ------------------------
# Tabla: Equipo Médico
# ------------------------
cursor.execute("""
CREATE TABLE IF NOT EXISTS equipo_medico (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre TEXT NOT NULL,
    identificador TEXT NOT NULL,
    especialidad TEXT DEFAULT 'General'
)
""")

# Insertar médicos si aún no existen
cursor.execute("SELECT COUNT(*) FROM equipo_medico")
if cursor.fetchone()[0] == 0:
    medicos = [
        ('Jesus Garcia', 'A00118637', 'General'),
        ('Yeremi Javier', 'A00119038', 'General'),
        ('Jhosua Encarnacion Castro', 'A00118649', 'General'),
        ('Peniel', 'A00119230', 'General'),
        ('Jeudy', 'A00113445', 'General')
    ]
    cursor.executemany("INSERT INTO equipo_medico (nombre, identificador, especialidad) VALUES (?, ?, ?)", medicos)

# ------------------------
# Tabla: Citas Médicas
# ------------------------
cursor.execute("""
CREATE TABLE IF NOT EXISTS citas (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    usuario_id INTEGER NOT NULL,
    medico_id INTEGER NOT NULL,
    fecha DATETIME NOT NULL,
    motivo TEXT,
    estado TEXT DEFAULT 'Pendiente',
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
    FOREIGN KEY (medico_id) REFERENCES equipo_medico(id)
)
""")

# ------------------------
# Tabla: Log de Accesos
# ------------------------
cursor.execute("""
CREATE TABLE IF NOT EXISTS log_accesos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    usuario_id INTEGER,
    accion TEXT NOT NULL,
    fecha DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
)
""")

# ------------------------
# Tabla: Relación Médico-Servicio
# ------------------------
cursor.execute("""
CREATE TABLE IF NOT EXISTS medico_servicio (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    medico_id INTEGER NOT NULL,
    servicio_id INTEGER NOT NULL,
    FOREIGN KEY (medico_id) REFERENCES equipo_medico(id),
    FOREIGN KEY (servicio_id) REFERENCES servicios(id)
)
""")

# ------------------------
# Guardar y cerrar conexión
# ------------------------
conn.commit()
conn.close()

# ------------------------
# Mensaje final
# ------------------------
print("Base de datos creada con exito.")
